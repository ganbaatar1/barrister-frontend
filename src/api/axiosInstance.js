// src/api/axiosInstance.js
import axios from "axios";

/**
 * DEV: CRA proxy –∞—à–∏–≥–ª–∞—Ö–¥–∞–∞ baseURL = "/api"
 * PROD: REACT_APP_API_BASE (—ç—Å–≤—ç–ª REACT_APP_API_BASE_URL) –∞—à–∏–≥–ª–∞–Ω–∞
 *  ‚îî‚îÄ –ñ–∏—à—ç—ç: REACT_APP_API_BASE=https://barrister-backend.onrender.com/api
 */
const envBase =
  (process.env.REACT_APP_API_BASE || process.env.REACT_APP_API_BASE_URL || "").trim();

const API_BASE = envBase || "/api"; // env –±–∞–π—Ö–≥“Ø–π –±–æ–ª DEV proxy /api —Ä—É—É –¥–∞–º–∂–∏–Ω–∞

const axiosInstance = axios.create({
  baseURL: API_BASE,
  withCredentials: true,
  headers: {
    "Content-Type": "application/json",
  },
  timeout: 20000,
});

// üîê Authorization header —à—É—Ä–≥—É—É–ª–Ω–∞ (–ª–æ–∫–∞–ª storage-–æ–æ—Å)
axiosInstance.interceptors.request.use(
  (config) => {
    try {
      const token = localStorage.getItem("accessToken");
      if (token) config.headers.Authorization = `Bearer ${token}`;
    } catch {
      /* noop */
    }
    return config;
  },
  (error) => Promise.reject(error)
);

// üîÅ –•–∞—Ä–∏—É –∏–Ω—Ç–µ—Ä—Å–µ–ø—Ç–æ—Ä (—à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π –±–æ–ª 401 –¥—ç—ç—Ä –Ω–∞–≤–∏–≥–∞—Ü–∏ —Ö–∏–π—Ö –±–æ–ª–æ–º–∂—Ç–æ–π)
axiosInstance.interceptors.response.use(
  (res) => res,
  (err) => {
    // –ñ–∏—à—ç—ç: if (err?.response?.status === 401) window.location.href = "/login";
    return Promise.reject(err);
  }
);

export default axiosInstance;
