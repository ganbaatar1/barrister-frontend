// backend/server.js
const express = require("express");
const cors = require("cors");
const helmet = require("helmet");
const path = require("path");
const fs = require("fs");
require("dotenv").config();

const connectDB = require("./config/db");
const app = express();

// ----- Trust proxy (heroku/vercel/nginx –∞—Ä–¥ –∞–∂–∏–ª–ª–∞—Ö “Ø–µ–¥) -----
app.set("trust proxy", 1);

// ===== Firebase Admin SDK setup (file commit —Ö–∏–π—Ö–≥“Ø–π–≥—ç—ç—Ä) =====
const admin = require("firebase-admin");

const base64ServiceAccount = process.env.FIREBASE_SERVICE_ACCOUNT_BASE64;

if (!base64ServiceAccount) {
  console.error("‚ùå FIREBASE_SERVICE_ACCOUNT_BASE64 environment variable –±–∞–π—Ö–≥“Ø–π –±–∞–π–Ω–∞!");
  process.exit(1);
}

let serviceAccount;
try {
  const decoded = Buffer.from(base64ServiceAccount, "base64").toString("utf8");
  serviceAccount = JSON.parse(decoded);
} catch (e) {
  console.error("‚ùå FIREBASE_SERVICE_ACCOUNT_BASE64 –∑–∞–¥–ª–∞—Ö/JSON parse —Ö–∏–π—Ö—ç–¥ –∞–ª–¥–∞–∞:", e.message);
  process.exit(1);
}

if (!admin.apps.length) {
  admin.initializeApp({
    credential: admin.credential.cert(serviceAccount),
    // storageBucket –≥—ç—Ö –º—ç—Ç –Ω—ç–º—ç–ª—Ç —Ç–æ—Ö–∏—Ä–≥–æ–æ –±–∞–π–≤–∞–ª —ç–Ω–¥—ç—ç –æ—Ä—É—É–ª–Ω–∞
  });
  console.log("‚úÖ Firebase Admin –∞–º–∂–∏–ª—Ç—Ç–∞–π initialize –±–æ–ª–ª–æ–æ.");
}
// ===============================

// ‚úÖ Security middleware
app.use(
  helmet({
    crossOriginResourcePolicy: false,           // /uploads-—ã–≥ –∫—Ä–æ—Å—Å-–æ—Ä–∏–∂–∏–Ω–¥ “Ø–∑“Ø“Ø–ª—ç—Ö—ç–¥
    crossOriginEmbedderPolicy: false,           // –∑–∞—Ä–∏–º asset-—Ç–∞–π –∑”©—Ä—á–∏–ª–¥”©—Ö”©”©—Å —Å—ç—Ä–≥–∏–π–ª—ç—Ö
    contentSecurityPolicy: false,               // SPA + WYSIWYG –≥—ç—Ö –º—ç—Ç—ç–¥ —Ö—ç—Ä—ç–≥—Ç—ç–π –±–∞–π–∂ –±–æ–ª–Ω–æ
  })
);

// Root route
app.get("/", (req, res) => {
  res.send("‚úÖ Backend —Å–µ—Ä–≤–µ—Ä –∞–º–∂–∏–ª—Ç—Ç–∞–π –∞–∂–∏–ª–ª–∞–∂ –±–∞–π–Ω–∞!");
});

// Body parser middleware
app.use(express.json({ limit: "10mb" }));
app.use(express.urlencoded({ extended: true, limit: "10mb" }));

// Global CORS —Ç–æ—Ö–∏—Ä–≥–æ–æ
const allowedOrigins = [
  process.env.CLIENT_URL,
  process.env.CLIENT_URL_2,
  "http://localhost:3000",
  "https://barrister-frontend.vercel.app",
].filter(Boolean);

app.use(
  cors({
    origin: function (origin, callback) {
      if (!origin) return callback(null, true); // curl, Postman –∑—ç—Ä—ç–≥
      if (allowedOrigins.includes(origin)) {
        return callback(null, true);
      }
      return callback(new Error(`CORS policy: ${origin} origin-—ã–≥ –∑”©–≤—à”©”©—Ä”©—Ö–≥“Ø–π –±–∞–π–Ω–∞.`), false);
    },
    credentials: true,
  })
);

// uploads —Ö–∞–≤—Ç–∞—Å –±–æ–ª–æ–Ω default –∑—É—Ä–∞–≥ “Ø“Ø—Å–≥—ç—Ö
const ensureDefaultProfileImage = () => {
  const uploadsDir = path.join(__dirname, "uploads");
  const defaultImageSrc = path.join(__dirname, "../src/assets/default-profile.png");
  const defaultImageDest = path.join(uploadsDir, "default-profile.png");

  try {
    if (!fs.existsSync(uploadsDir)) {
      fs.mkdirSync(uploadsDir, { recursive: true });
    }
    if (fs.existsSync(defaultImageSrc) && !fs.existsSync(defaultImageDest)) {
      fs.copyFileSync(defaultImageSrc, defaultImageDest);
      console.log("‚úÖ default-profile.png –∑—É—Ä–≥–∏–π–≥ —Ö—É—É–ª–ª–∞–∞.");
    }
  } catch (err) {
    console.error("‚ùå default –∑—É—Ä–≥–∏–π–≥ –±—ç–ª—Ç–≥—ç—Ö—ç–¥ –∞–ª–¥–∞–∞:", err.message);
  }
};

// ‚úÖ Static —Ñ–∞–π–ª ‚Äì /uploads-–≥ –Ω–∏–π—Ç—ç–¥ –Ω—ç—ç—Ö
ensureDefaultProfileImage();
app.use("/uploads", express.static(path.join(__dirname, "uploads")));

// ‚úÖ API Routes
app.use("/api/lawyers", require("./routes/lawyerRoutes"));
app.use("/api/news", require("./routes/newsRoutes"));
app.use("/api/testimonials", require("./routes/testimonialRoutes"));
app.use("/api/home", require("./routes/homeRoutes"));
app.use("/api/advice", require("./routes/adviceRoutes"));
app.use("/api/contactSettings", require("./routes/contactSettings"));

// 404 (–æ–ª–¥—Å–æ–Ω–≥“Ø–π) handler
app.use((req, res, next) => {
  res.status(404).json({ error: "–•—É—É–¥–∞—Å/—Ä–µ—Å—É—Ä—Å –æ–ª–¥—Å–æ–Ω–≥“Ø–π" });
});

// Error handler
// eslint-disable-next-line no-unused-vars
app.use((err, req, res, next) => {
  console.error("üö® –°–µ—Ä–≤–µ—Ä–∏–π–Ω –∞–ª–¥–∞–∞:", err.stack);
  res.status(500).json({
    error: "–°–µ—Ä–≤–µ—Ä–∏–π–Ω –¥–æ—Ç–æ–æ–¥ –∞–ª–¥–∞–∞",
    details: err.message || "–ê–ª–¥–∞–∞–Ω—ã –¥—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π –º—ç–¥—ç—ç–ª—ç–ª –±–∞–π—Ö–≥“Ø–π",
  });
});

// Start server
const PORT = process.env.PORT || 5050;

connectDB()
  .then(() => {
    app.listen(PORT, () => {
      console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –∞–º–∂–∏–ª—Ç—Ç–∞–π –∞–∂–∏–ª–ª–∞–∂ –±–∞–π–Ω–∞ ‚Äî –ø–æ—Ä—Ç: ${PORT}`);
    });
  })
  .catch((e) => {
    console.error("‚ùå DB-—Ç —Ö–æ–ª–±–æ–≥–¥–æ—Ö “Ø–µ–¥ –∞–ª–¥–∞–∞:", e.message);
    process.exit(1);
  });
